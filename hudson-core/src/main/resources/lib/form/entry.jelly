<!--
The MIT License

Copyright (c) 2004-2011, Oracle Corporation,, Kohsuke Kawaguchi, Nikita Levyankov, Anton Kozak

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  <st:documentation>
    An entry of the &lt;f:form>, which is one logical row (that consists of
    several &lt;TR> tags.

    One entry normally host one control.

    <st:attribute name="title">
      Name of the entry. Think of this like a label for the control.
    </st:attribute>
    <st:attribute name="field">
      Used for the databinding. TBD. When this attribute
      is specified, @help is inferred, and nested input controls don't need
      the @field nor @name.
    </st:attribute>
    <st:attribute name="description">
      If it's not obvious to the user as to what the control expects,
      specify some description text (which currently gets rendered as
      small text under the control, but that may change.)

      This text shouldn't get too long, and in recent Hudson, this feature
      is somewhat de-emphasized, in favor of the inline foldable help page
      specified via @help.
    </st:attribute>
    <st:attribute name="isPropertyOverridden">
      if present and true - value is overridden
    </st:attribute>
    <st:attribute name="help">
      URL to the HTML page. When this attribute is specified, the entry gets
      a (?) icon on the right, and if the user clicks it, the contents of the
      given URL is rendered as a box below the entry.

      The URL should return an HTML document wrapped in a &lt;div> tag.
      The URL is interpreted to be rooted at the context path of Hudson,
      so it's normally something like "/plugin/foobar/help/abc.html".
    </st:attribute>
  </st:documentation>
  <j:if test="${attrs.help==null and attrs.field!=null}">
    <!-- infer the help page from the current descriptor and field if possible -->
    <j:set target="${attrs}" property="help"
           value="${descriptor.getHelpFile(attrs.field)}" />
  </j:if>
  <j:if test="${attrs.isPropertyOverridden==null}">
    <j:set target="${attrs}" property="isPropertyOverridden" value="false"/>
  </j:if>
  <!-- expose this so that we can look up the @field value later from prepareDatabinding.jelly -->
  <j:set var="entry" value="${attrs}" />
  <tr class="${attrs.isPropertyOverridden? 'modified': 'original'}">
    <td class="setting-leftspace"><st:nbsp/></td>
    <td class="setting-name">
      <j:out value="${attrs.title}" />
    </td>
    <td class="setting-main">
      <d:invokeBody />
    </td>
    <j:if test="${attrs.help!=null}">
      <td class="setting-help">
        <a href="#" class="help-button" helpURL="${rootURL}${attrs.help}"><img src="${imagesURL}/16x16/help.gif" alt="Help for feature: ${title}" /></a>
      </td>
    </j:if>
  </tr>
  <!-- used to display the form validation error -->
  <tr class="validation-error-area"><td colspan="2" /><td /></tr>
  <j:if test="${!empty(attrs.description)}">
    <f:description isPropertyOverridden="${attrs.isPropertyOverridden}">
      <j:out value="${description}"/>
    </f:description>
  </j:if>
  <j:if test="${attrs.help!=null}">
    <f:helpArea />
  </j:if>
</j:jelly>
