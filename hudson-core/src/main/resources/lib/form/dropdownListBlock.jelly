<!--
The MIT License

Copyright (c) 2004-2009, Sun Microsystems, Inc., Kohsuke Kawaguchi

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  <st:documentation>
    Foldable block expanded when the corresponding item is selected in the drop-down list.

    <st:attribute name="value" use="required">
      value of the list item. set to &lt;option value="...">
    </st:attribute>
    <st:attribute name="title" use="required">
      human readable text displayed for this list item.
    </st:attribute>
    <st:attribute name="selected" type="boolean">
      is this value initially selected?
    </st:attribute>
    <st:attribute name="staplerClass">
      provide hint for stapler data binding.
      typically set to ${descriptor.clazz.name} if dropdownList is for a list of descriptors.
    </st:attribute>
  </st:documentation>
  <j:choose>
    <j:when test="${dropdownListMode=='createSelectField'}">
      <f:option selected="${attrs.selected}" value="${value}">${title}</f:option>
    </j:when>
    <j:when test="${dropdownListMode=='generateEntries'}">
      <!-- sandwich them by markers so that we know what to show/hide -->
      <tr class="dropdownList-start" style="display:none">
        <j:if test="${!empty(attrs.staplerClass)}">
          <td><input type="hidden" name="stapler-class" value="${attrs.staplerClass}"/></td>
        </j:if>
      </tr>
      <d:invokeBody />
      <tr class="dropdownList-end" style="display:none" />
    </j:when>
  </j:choose>
</j:jelly>
